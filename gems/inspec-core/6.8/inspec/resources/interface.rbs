module Inspec::Resources
  class NetworkInterface
    def initialize: (untyped iface) -> void

    def exists?: () -> untyped

    def up?: () -> untyped

    def name: () -> untyped

    # returns link speed in Mbits/sec
    def speed: () -> untyped

    def ipv4_address?: () -> untyped

    def ipv6_address?: () -> untyped

    def ipv4_address: () -> untyped

    def ipv4_addresses: () -> untyped

    def ipv6_address: () -> untyped

    def ipv6_addresses: () -> untyped

    def ipv4_addresses_netmask: () -> untyped

    def ipv4_cidrs: () -> untyped

    def ipv6_cidrs: () -> untyped

    def resource_id: () -> untyped

    def to_s: () -> ::String

    private

    def interface_info: () -> untyped
  end

  class InterfaceInfo
    include Converter

    attr_reader inspec: untyped

    def initialize: (untyped inspec) -> void
  end

  class BsdInterface < InterfaceInfo
    def interface_info: (untyped iface) -> (nil | untyped)
  end

  class LinuxInterface < InterfaceInfo
    def interface_info: (untyped iface) -> (nil | { name: untyped, up: untyped, speed: untyped, :ipv4_addresses => untyped, :ipv6_addresses => untyped })

    private

    def addresses: (untyped iface) -> untyped
  end

  class WindowsInterface < InterfaceInfo
    def interface_info: (untyped iface) -> (nil | untyped)

    private

    def addresses_for_proto: (untyped all_addresses, untyped iface, untyped proto) -> untyped
  end
end
