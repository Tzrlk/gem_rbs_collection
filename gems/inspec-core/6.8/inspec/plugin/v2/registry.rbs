module Inspec::Plugin::V2
  class Registry
    include Singleton

    extend Forwardable

    attr_reader registry: untyped

    def initialize: () -> void

    def any_load_failures?: () -> untyped

    def loaded_plugin?: (untyped name) -> untyped

    def loaded_count: () -> untyped

    def known_count: () -> untyped

    def loaded_plugin_names: () -> untyped

    def path_based_plugin?: (untyped name) -> untyped

    def find_status_by_class: (untyped klass) -> untyped

    # Finds Activators matching criteria (all optional) you specify as a Hash.
    # @param [Symbol] plugin_name Restricts the search to the given plugin
    # @param [Symbol] plugin_type Restricts the search to the given plugin type
    # @param [Symbol] activator_name Name of the activator
    # @param [Class] implementation_class Implementation class returned by an already-actived plugin type
    # @returns [Array] Possibly empty array of Activators
    def find_activators: (?::Hash[untyped, untyped] filters) -> untyped

    # Convenience method for when you expect exactly one
    def find_activator: (?::Hash[untyped, untyped] filters) -> untyped

    def register: (untyped name, untyped status) -> untyped

    alias []= register

    # Provided for test support. Purges the registry.
    def __reset: () -> untyped
  end
end
