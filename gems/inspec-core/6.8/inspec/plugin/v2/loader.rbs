module Inspec::Plugin::V2
  class Loader
    attr_reader conf_file: untyped

    attr_reader registry: untyped

    attr_reader options: untyped

    # For {inspec|train}_plugin_name?
    include Inspec::Plugin::V2::FilterPredicates

    extend Inspec::Plugin::V2::FilterPredicates

    def initialize: (?::Hash[untyped, untyped] options) -> void

    def load_all: () -> untyped

    # This should possibly be in either lib/inspec/cli.rb or Registry
    def exit_on_load_error: () -> (untyped | nil)

    def activate_mentioned_cli_plugins: (?untyped cli_args) -> untyped

    def plugin_gem_path: () -> untyped

    def self.plugin_gem_path: () -> untyped

    # Lists all gems found in the plugin_gem_path.
    # @return [Array[Gem::Specification]] Specs of all gems found.
    def self.list_managed_gems: () -> untyped

    def list_managed_gems: () -> untyped

    # Lists all plugin gems found in the plugin_gem_path.
    # This is simply all gems that begin with train- or inspec-
    # and are not on the exclusion list.
    # @return [Array[Gem::Specification]] Specs of all gems found.
    def self.list_installed_plugin_gems: () -> untyped

    def list_installed_plugin_gems: () -> untyped

    private

    # 'Activating' a gem adds it to the load path, so 'require "gemname"' will work.
    # Given a gem name, this activates the gem and all of its dependencies, respecting
    # version pinning needs.
    def activate_managed_gems_for_plugin: (untyped plugin_gem_name, ?::String version_constraint) -> untyped

    def annotate_status_after_loading: (untyped plugin_name) -> (nil | untyped)

    def annotate_bundle_plugin_status_after_load: (untyped plugin_name) -> untyped

    def detect_bundled_plugins: () -> untyped

    def detect_core_plugins: () -> untyped

    def fetch_gemspec: (untyped spec_file) -> untyped

    def read_conf_file_into_registry: () -> untyped

    def fixup_train_plugin_status: (untyped status) -> untyped

    def find_inspec_gemspec: (untyped name, untyped ver) -> untyped

    def detect_system_plugins: () -> (nil | untyped)
  end
end
