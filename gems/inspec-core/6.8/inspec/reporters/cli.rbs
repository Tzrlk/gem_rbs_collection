module Inspec::Reporters
  class CLI < Base
    # Most currently available Windows terminals have poor support
    # for ANSI extended colors
    COLORS: ::Hash[::String, "\e[0;1;31m" | "\e[0;1;32m" | "\e[0;37m" | "\e[0m" | "\e[34m" | "\e[36m" | "\e[33m"]

    # Most currently available Windows terminals have poor support
    # for UTF-8 characters so use these boring indicators
    INDICATORS: ::Hash[::String, "[FAIL]" | "[SKIP]" | "[PASS]" | "[UNKN]" | "[ERR]" | "[N/A]" | "[N/R]"]

    # Extended colors for everyone else
    COLORS: ::Hash[::String, "\e[38;5;9m" | "\e[38;5;41m" | "\e[38;5;247m" | "\e[0m" | "\e[0;38;5;21m" | "\e[0;38;5;117m" | "\e[0;38;5;214m"]

    # Groovy UTF-8 characters for everyone else...
    # ...even though they probably only work on Mac
    INDICATORS: ::Hash[::String, ::String | "?" | "ERR" | "N/A" | "N/R"]

    MULTI_TEST_CONTROL_SUMMARY_MAX_LEN: 60

    def render: () -> untyped

    private

    def print_profile_header: (untyped profile) -> untyped

    def print_standard_control_results: (untyped profile) -> untyped

    def print_anonymous_control_results: (untyped profile) -> untyped

    def format_profile_name: (untyped profile) -> (untyped | ::String)

    def format_control_header: (untyped control) -> untyped

    def format_control_source: (untyped control) -> untyped

    def read_control_source: (untyped profile) -> (nil | untyped)

    def format_result: (untyped control, untyped result, untyped `type`) -> untyped

    def format_message: (untyped message_info) -> untyped

    def format_with_color: (untyped color_name, untyped text) -> (untyped | ::String)

    def all_unique_controls: () -> untyped

    def profile_summary: () -> ::Hash[::String, untyped]

    def tests_summary: () -> ::Hash[::String, untyped]

    def control_outcomes_summary: () -> ::Hash[::String, untyped]

    def print_control_outcomes_summary: () -> (nil | untyped)

    def print_profile_summary: () -> (nil | untyped)

    def print_tests_summary: () -> untyped

    def standard_controls_from_profile: (untyped profile) -> untyped

    def anonymous_controls_from_profile: (untyped profile) -> untyped

    def is_anonymous_control?: (untyped control) -> untyped

    def indent_lines: (untyped message, untyped indentation) -> untyped

    class Control
      attr_reader data: untyped

      attr_accessor enhanced_outcomes: untyped

      def initialize: (untyped control_hash) -> void

      def id: () -> untyped

      def title: () -> untyped

      def results: () -> untyped

      def impact: () -> untyped

      def source_location: () -> untyped

      def anonymous?: () -> untyped

      def status: () -> untyped

      def title_for_report: () -> untyped

      def impact_string_for_enhanced_outcomes: () -> ("unknown" | untyped)

      def impact_string: () -> (nil | "unknown" | "skipped" | "passed" | "failed")

      def impact_string_for_result: (untyped result) -> ("skipped" | "passed" | "unknown" | "failed")

      def failure_count: () -> untyped

      def skipped_count: () -> untyped
    end
  end
end
